/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { MapsAccount as MapsAccountMapper, MapsAccountUpdateParameters as MapsAccountUpdateParametersMapper, AccountSasParameters as AccountSasParametersMapper, MapsKeySpecification as MapsKeySpecificationMapper, Creator as CreatorMapper, CreatorUpdateParameters as CreatorUpdateParametersMapper } from "../models/mappers";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const mapsAccount = {
    parameterPath: "mapsAccount",
    mapper: MapsAccountMapper
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2023-06-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const accountName = {
    parameterPath: "accountName",
    mapper: {
        serializedName: "accountName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const mapsAccountUpdateParameters = {
    parameterPath: "mapsAccountUpdateParameters",
    mapper: MapsAccountUpdateParametersMapper
};
export const mapsAccountSasParameters = {
    parameterPath: "mapsAccountSasParameters",
    mapper: AccountSasParametersMapper
};
export const keySpecification = {
    parameterPath: "keySpecification",
    mapper: MapsKeySpecificationMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const creatorResource = {
    parameterPath: "creatorResource",
    mapper: CreatorMapper
};
export const creatorName = {
    parameterPath: "creatorName",
    mapper: {
        serializedName: "creatorName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const creatorUpdateParameters = {
    parameterPath: "creatorUpdateParameters",
    mapper: CreatorUpdateParametersMapper
};
//# sourceMappingURL=parameters.js.map